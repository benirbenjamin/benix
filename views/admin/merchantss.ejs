<%- include('../partials/navbar') %>

<div class="container mt-4">
  <h1>Merchant Payment Management</h1>
  
  <% if (success) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <%= success %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <%= error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <div class="row">
    <div class="col-lg-12">
      <div class="card mb-4">
        <div class="card-header">
          <h5 class="mb-0">Merchants with Balances</h5>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-striped" id="merchants-table">
              <thead>
                <tr>
                  <th>Merchant</th>
                  <th>Business Name</th>
                  <th>Outstanding Balance</th>
                  <th>Paid Balance</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (merchants && merchants.length > 0) { %>
                  <% merchants.forEach(merchant => { %>
                    <tr>
                      <td><%= merchant.username %></td>
                      <td><%= merchant.business_name || 'N/A' %></td>
                      <td>$<%= parseFloat(merchant.amount_to_pay).toFixed(4) %></td>
                      <td>$<%= parseFloat(merchant.paid_balance).toFixed(4) %></td>
                      <td>
                        <button 
                          class="btn btn-sm btn-primary" 
                          data-bs-toggle="modal" 
                          data-bs-target="#recordPaymentModal"
                          data-merchant-id="<%= merchant.id %>"
                          data-merchant-name="<%= merchant.username %>"
                          data-merchant-balance="<%= parseFloat(merchant.amount_to_pay).toFixed(4) %>"
                        >
                          Record Payment
                        </button>
                      </td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="5" class="text-center">No merchants found</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-lg-12">
      <div class="card">
        <div class="card-header">
          <h5 class="mb-0">Recent Payment Records</h5>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-striped">
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Merchant</th>
                  <th>Amount</th>
                  <th>Details</th>
                </tr>
              </thead>
              <tbody>
                <% if (payments && payments.length > 0) { %>
                  <% payments.forEach(payment => { %>
                    <tr>
                      <td><%= new Date(payment.created_at).toLocaleString() %></td>
                      <td><%= payment.username %></td>
                      <td>$<%= parseFloat(payment.amount).toFixed(4) %></td>
                      <td><%= payment.details %></td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="4" class="text-center">No payment records found</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Record Payment Modal -->
<div class="modal fade" id="recordPaymentModal" tabindex="-1" aria-labelledby="recordPaymentModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="recordPaymentModalLabel">Record Merchant Payment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="recordPaymentForm">
          <input type="hidden" id="merchantId" name="merchantId">
          
          <div class="mb-3">
            <label for="merchantName" class="form-label">Merchant</label>
            <input type="text" class="form-control" id="merchantName" readonly>
          </div>
          
          <div class="mb-3">
            <label for="outstandingBalance" class="form-label">Outstanding Balance</label>
            <input type="text" class="form-control" id="outstandingBalance" readonly>
          </div>
          
          <div class="mb-3">
            <label for="paymentAmount" class="form-label">Payment Amount</label>
            <input type="number" step="0.01" min="0.01" class="form-control" id="paymentAmount" name="amount" required>
            <div class="form-text">Enter the amount the merchant has paid.</div>
          </div>
          
          <div class="mb-3">
            <label for="paymentNotes" class="form-label">Payment Notes</label>
            <textarea class="form-control" id="paymentNotes" name="notes" rows="3"></textarea>
            <div class="form-text">Optional: Add any notes about this payment.</div>
          </div>
          
          <div class="alert alert-danger d-none" id="paymentError"></div>
          <div class="alert alert-success d-none" id="paymentSuccess"></div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="submitPayment">Record Payment</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle modal data
    const recordPaymentModal = document.getElementById('recordPaymentModal');
    if (recordPaymentModal) {
      recordPaymentModal.addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget;
        const merchantId = button.getAttribute('data-merchant-id');
        const merchantName = button.getAttribute('data-merchant-name');
        const merchantBalance = button.getAttribute('data-merchant-balance');
        
        document.getElementById('merchantId').value = merchantId;
        document.getElementById('merchantName').value = merchantName;
        document.getElementById('outstandingBalance').value = '$' + merchantBalance;
        document.getElementById('paymentAmount').value = merchantBalance;
        
        // Reset alerts
        document.getElementById('paymentError').classList.add('d-none');
        document.getElementById('paymentSuccess').classList.add('d-none');
      });
    }
    
    // Handle payment submission
    document.getElementById('submitPayment').addEventListener('click', function() {
      const form = document.getElementById('recordPaymentForm');
      const merchantId = document.getElementById('merchantId').value;
      const amount = document.getElementById('paymentAmount').value;
      const notes = document.getElementById('paymentNotes').value;
      
      // Validation
      if (!merchantId || !amount || parseFloat(amount) <= 0) {
        const errorEl = document.getElementById('paymentError');
        errorEl.textContent = 'Please enter a valid payment amount';
        errorEl.classList.remove('d-none');
        return;
      }
      
      // Submit via AJAX
      fetch('/admin/merchant-payment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          merchantId: merchantId,
          amount: amount,
          notes: notes
        }),
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          const successEl = document.getElementById('paymentSuccess');
          successEl.textContent = data.message || 'Payment recorded successfully';
          successEl.classList.remove('d-none');
          
          // Hide error if visible
          document.getElementById('paymentError').classList.add('d-none');
          
          // Disable submit button
          document.getElementById('submitPayment').disabled = true;
          
          // Reload page after a delay
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          const errorEl = document.getElementById('paymentError');
          errorEl.textContent = data.message || 'Failed to record payment';
          errorEl.classList.remove('d-none');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        const errorEl = document.getElementById('paymentError');
        errorEl.textContent = 'Server error. Please try again.';
        errorEl.classList.remove('d-none');
      });
    });
    
    // Initialize datatable if available
    if ($.fn.DataTable && document.getElementById('merchants-table')) {
      $('#merchants-table').DataTable({
        order: [[2, 'desc']], // Sort by outstanding balance by default
        language: {
          search: "Search merchants:"
        }
      });
    }
  });
</script>

<%- include('../partials/footer') %>